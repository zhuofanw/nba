{"version":3,"sources":["assets/logo.svg","components/TopNavBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","registerServiceWorker.js","index.js"],"names":["TopNavBar","className","src","logo","alt","React","Component","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerName","playerId","Profile","this","props","playerInfo","teamName","teamCity","teamAbbreviation","height","weight","pts","reb","ast","pie","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayType","chartType","call","datum","id","CountSlider","state","value","defaultValue","onChange","cleanValue","Number","setState","offset","span","min","max","_","debounce","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","onCountSliderChange","onChartTypeChange","e","target","onTooltipChange","checked","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","fullName","onSelect","loadPlayerInfo","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","console","log","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.db5d8439.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9470e2d5.svg\";","import React from 'react';\nimport logo from \"../assets/logo.svg\"\n\nexport class TopNavBar extends React.Component{\n    render(){\n        return(\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n        );\n    }\n}","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\nexport const DEFAULT_PLAYER_INFO = {\n    playerName: \"Stephen Curry\",\n    playerId: 201939,\n}","import React from 'react';\nimport {PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX} from '../constants'\nexport class Profile extends React.Component{\n    render(){\n        const {\n            playerId,\n            playerName,\n            teamName,\n            teamCity,\n            teamAbbreviation,\n            height,\n            weight,\n            pts,\n            reb,\n            ast,\n            pie,\n        } = this.props.playerInfo;\n\n        return (\n            <div className=\"profile\">\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n                <img\n                    className=\"profile-pic\"\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n                    alt=\"Profile\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Team</div>\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n                </div>\n                <img\n                    className=\"team-logo\"\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n                    alt=\"Team\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Height</div>\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Weight</div>\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PTS</div>\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">REB</div>\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">AST</div>\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PIE</div>\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nexport class ShotChart extends React.Component {\n    static propTypes = {\n        playerId: PropTypes.number.isRequired,\n        minCount: PropTypes.number.isRequired,\n        chartType: PropTypes.string.isRequired,\n        displayToolTips: PropTypes.bool.isRequired\n    }\n\n    componentDidUpdate() {\n        nba.stats.shots({\n            PlayerID: this.props.playerId\n        }).then((response) => {\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\n                x: (shot.locX + 250) / 10,\n                y: (shot.locY + 50) / 10,\n                action_type: shot.actionType,\n                shot_distance: shot.shotDistance,\n                shot_made_flag: shot.shotMadeFlag,\n            }));\n\n            const courtSelection = d3.select(\"#shot-chart\");\n            courtSelection.html('');\n            const chart_court = court().width(500);\n            const chart_shots = shots()\n                .shotRenderThreshold(this.props.minCount)\n                .displayToolTips(this.props.displayToolTips)\n                .displayType(this.props.chartType);\n            courtSelection.call(chart_court);\n            courtSelection.datum(final_shots).call(chart_shots);\n        });\n    }\n    render() {\n        return (\n            <div id=\"shot-chart\"></div>\n        );\n    }\n}\n","import React from 'react';\nimport {Col, InputNumber, Row, Slider} from \"antd\"\nimport _ from \"lodash\"\nexport class CountSlider extends React.Component{\n\n    state ={\n        value:this.props.defaultValue\n    }\n\n    onChange = (value) => {\n        const cleanValue = Number(value) ? Number(value) : this.state.value;\n        this.setState({value:cleanValue});\n        this.props.onChange(cleanValue);\n    }\n\n    render(){\n        const { value } = this.state;\n        return(\n            <Row>\n                <Col offset={4} span={12}>\n                    <Slider min={2} max={20}\n                            onChange={_.debounce(this.onChange)}\n                            value={value}\n                    />\n                </Col>\n                <Col span={4}>\n                    <InputNumber\n                        min={2}\n                        max={20}\n                        style={{ marginLeft: 16 }}\n                        value={value}\n                        onChange={this.onChange}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}","import React from 'react';\nimport { ShotChart } from \"./ShotChart\"\nimport { Radio, Switch } from 'antd';\nimport {CountSlider} from \"./CountSlider\"\nimport _ from 'lodash';\n\nconst RadioGroup = Radio.Group;\n\nexport class DataViewContainer extends React.Component{\n    state = {\n        minCount: 2,\n        chartType: \"hexbin\",\n        displayToolTips: true\n    }\n\n    onCountSliderChange = (value) => { //callback function\n        this.setState({\n            minCount: value,\n        });\n    }\n\n    onChartTypeChange = (e) => { //callback function\n        this.setState({\n            chartType: e.target.value\n        });\n    }\n\n    onTooltipChange = (checked) => {\n        this.setState({\n            displayToolTips:checked\n        });\n    }\n\n    render(){\n        const { minCount, chartType, displayToolTips} = this.state;\n        return(\n            <div className='data-view'>\n                <ShotChart\n                    playerId={this.props.playerId}\n                    minCount = {minCount}\n                    displayToolTips={displayToolTips}\n                    chartType={chartType}\n                />\n\n                {\n                    (\n                        chartType === \"hexbin\" ?\n                            <CountSlider\n                                onChange={_.debounce(this.onCountSliderChange,500)}\n                                defaultValue={minCount}\n                            />\n                            : null\n                    )\n                }\n\n                <RadioGroup onChange={this.onChartTypeChange} value={chartType}>\n                    <Radio value=\"hexbin\">Hexbin</Radio>\n                    <Radio value=\"scatter\">Scatter</Radio>\n                </RadioGroup>\n                <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\" defaultChecked onChange={this.onTooltipChange}/>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { AutoComplete, Input, Icon } from \"antd\";\nimport nba from \"nba\";\nimport { PROFILE_PIC_URL_PREFIX } from \"../constants\";\n\nconst Option = AutoComplete.Option;\n\nexport class SearchBar extends React.Component {\n\tstate = {\n\t\tdataSource: [],\n\t};\n\t/* nba.search(Stephen Curry):\n{\n  firstName: 'Stephen',\n  lastName: 'Curry',\n  playerId: 201939,\n  teamId: 1610612744,\n  fullName: 'Stephen Curry',\n  downcaseName: 'stephen curry'\n}\n*/\n\thandleSearch = (value) => {\n\t\tthis.setState({\n\t\t\tdataSource: !value\n\t\t\t\t? []\n\t\t\t\t: nba.searchPlayers(value).map(({ fullName, playerId }) => (\n\t\t\t\t\t\t<Option key={playerId} value={fullName}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"player-option-image\"\n\t\t\t\t\t\t\t\tsrc={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n\t\t\t\t\t\t\t\talt=\"profile image\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"player-option-label\">{fullName}</span>\n\t\t\t\t\t\t</Option>\n\t\t\t\t  )),\n\t\t});\n\t};\n\n\tonSelect = (playerName) => {\n\t\tthis.props.loadPlayerInfo(playerName);\n\t};\n\n\trender() {\n\t\tconst { dataSource } = this.state;\n\t\treturn (\n\t\t\t<AutoComplete\n\t\t\t\tclassName=\"search-bar\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tdataSource={dataSource}\n\t\t\t\tonSelect={this.onSelect}\n\t\t\t\tonSearch={this.handleSearch}\n\t\t\t\tplaceholder=\"Search NBA player\"\n\t\t\t\toptionLabelProp=\"value\"\n\t\t\t>\n\t\t\t\t<Input suffix={<Icon type=\"search\" />} />\n\t\t\t</AutoComplete>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport nba from 'nba';\nimport {Profile} from \"./Profile\"\nimport {DataViewContainer} from \"./DataViewContainer\"\nimport {SearchBar} from \"./SearchBar\"\nimport { DEFAULT_PLAYER_INFO} from \"../constants\"\n\nexport class Main extends React.Component{\n    state = {\n        playerInfo: DEFAULT_PLAYER_INFO\n    }\n    componentDidMount() {\n        this.loadPlayerInfo(this.state.playerInfo.playerName);\n    }\n\n    loadPlayerInfo = (playerName) => {\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\n            const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n            this.setState({ playerInfo });\n        });\n    }\n\n    render(){\n        console.log(this.state.playerInfo);\n        return(\n            <div className=\"main\">\n                <SearchBar loadPlayerInfo={this.loadPlayerInfo}/>\n                <div className=\"player\">\n                    <Profile playerInfo={this.state.playerInfo}/>\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {TopNavBar} from \"./TopNavBar\";\nimport '../styles/App.css';\nimport {Main} from \"./Main\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <TopNavBar/>\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}